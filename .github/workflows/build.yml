name: Build executables

on:
  push:
    tags:
    - "v[0-9]+.*"

jobs:
  get-version:
    name: get-version
    runs-on: ubuntu-latest
    # env:
      # Set to force version number, e.g., when no tag exists.
      # RS_VERSION: TEST-0.0.0
    outputs:
      app_version: ${{ env.APP_VERSION }}
    steps:
      - name: Get the release version from the tag
        shell: bash
        if: env.APP_VERSION == ''
        run: |
          echo "APP_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          # echo echo ::set-output name=RS_VERSION::${GITHUB_REF#refs/tags/}
          # echo "APP_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
          echo "version is: ${{ env.APP_VERSION }}"
  build-release:
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.10" ]
        poetry-version: [ "1.2.2" ]
        os: [ ubuntu-22.04, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Disable virtualenvs
        run: poetry config virtualenvs.create false

      - name: Install dependencies
        run: poetry install

      - name: Build executable
        run: pyinstaller --clean pyinstaller.spec

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: aw-watcher-mpv-${{ needs.get-version.outputs.app_version }}-${{ matrix.os }}
          path: dist/aw-watcher-mpv
